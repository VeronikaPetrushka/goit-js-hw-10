{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onChange(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate < new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      document.querySelector('[data-start]').disabled = true;\n    } else {\n      document.querySelector('[data-start]').disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction updateTimer(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\ndocument.querySelector('[data-start]').addEventListener('click', () => {\n  const selectedDate = flatpickr('#datetime-picker').selectedDates[0];\n  const currentDate = new Date();\n  const ms = selectedDate - currentDate;\n  const intervalId = setInterval(() => {\n    updateTimer(ms);\n    if (ms <= 0) {\n      clearInterval(intervalId);\n      iziToast.success({\n        title: 'Success',\n        message: 'Countdown finished',\n      });\n    }\n  }, 1000);\n});\n"],"names":["options","selectedDates","iziToast","flatpickr","addLeadingZero","value","updateTimer","ms","days","hours","minutes","seconds","convertMs","intervalId"],"mappings":"+IAKA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,SAASC,EAAe,CACDA,EAAc,CAAC,EACjB,IAAI,MACrBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,SAAS,cAAc,cAAc,EAAE,SAAW,IAElD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEA,SAASC,EAAYC,EAAI,CACvB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtD,SAAS,cAAc,aAAa,EAAE,YAAcH,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCL,EAAeM,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCN,EAAeO,CAAO,CAC1B,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CAGrE,MAAMJ,EAFeJ,EAAU,kBAAkB,EAAE,cAAc,CAAC,EAC9C,IAAI,KAElBU,EAAa,YAAY,IAAM,CACnCP,EAAYC,CAAE,EACVA,GAAM,IACR,cAAcM,CAAU,EACxBX,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,oBACjB,CAAO,EAEJ,EAAE,GAAI,CACT,CAAC"}